<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.yifan</groupId>
  <artifactId>code_generator-maven-plugin</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>maven-plugin</packaging>

  <name>code-generator Maven Plugin</name>


  <properties>
    <java.version>17</java.version>
    <maven.compiler.target>17</maven.compiler.target>
    <maven.compiler.source>17</maven.compiler.source>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.version>3.6.3</maven.version>
    <maven.project.version>2.2.1</maven.project.version>
    <maven.plugin.annotations.version>3.6.0</maven.plugin.annotations.version>
    <jackson.version>2.15.2</jackson.version>
    <snakeyml.version>2.2</snakeyml.version>
    <mysql.version>9.3.0</mysql.version>
    <freemarker.version>2.3.33</freemarker.version>
    <lombok.version>1.18.34</lombok.version>
  </properties>

  <dependencies>
    <!-- 添加 Maven plugin 依赖 -->
    <!--maven-plugin-api provide necessary classes and interfaces to create our mojo -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>${maven.version}</version>
      <!--            <scope>provided</scope>-->
    </dependency>
    <!-- comes in handy to use annotations in our classes-->
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <version>${maven.plugin.annotations.version}</version>
      <!--            <scope>provided</scope>-->
    </dependency>
    <!-- let us access the information about the project where we're including the plugin-->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>${maven.project.version}</version>
      <!--            <scope>provided</scope>-->
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>3.9.8</version>
      <scope>test</scope>
    </dependency>
    <!-- [NEW] 添加 Maven Model 用于读写 pom.xml -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <version>${maven.version}</version>
      <!--            <scope>provided</scope>-->
    </dependency>
    <!-- 用于解析 YAML 文件的 Jackson 库 -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>${snakeyml.version}</version> <!-- IMPORTANT: Use 2.0 or newer to resolve the constructor issue -->
    </dependency>
    <!-- [NEW] Required for MavenXpp3Reader and MavenXpp3Writer to read/write POMs -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
      <version>${maven.version}</version>
      <!--            <scope>provided</scope>-->
    </dependency>
    <!-- Plexus工具类 -->
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>3.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>${freemarker.version}</version>
    </dependency>
    <dependency>
      <groupId>com.mysql</groupId>
      <artifactId>mysql-connector-j</artifactId>
      <version>${mysql.version}</version>
    </dependency>
    <!-- Mockito for creating mock objects -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>5.12.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>5.12.0</version>
      <scope>test</scope>
    </dependency>
    <!-- JUnit 5 for unit testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.10.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.10.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.34</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.11.0</version> <!-- 请使用最新稳定版本 -->
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>3.13.1</version>
        <!-- [MODIFIED] 增加 goalPrefix 配置 -->
        <configuration>
          <!-- 这个前缀就是未来执行命令时使用的短名称 -->
          <goalPrefix>code_generator</goalPrefix>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
